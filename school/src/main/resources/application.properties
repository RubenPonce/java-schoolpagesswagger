server.port=${PORT:2019}

#h2 config
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#end h2 config

#drop n create table again, good for testing, comment this in production set -> create(loads up data again)
spring.jpa.hibernate.ddl-auto=none

#this says use data.sql file set -> always
spring.datasource.initialization-mode=never


#postgres local config###################################

#spring.datasource.url=jdbc:postgresql://localhost:5433/dbstarthere
##password to our database
#spring.datasource.username=postgres
#spring.datasource.password=password
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#end postgres

#postgres HEROKU ########################################
#rubenponce$ heroku config -a ruben-starthere
#=== ruben-starthere Config Vars
#DATABASE_URL: postgres://aqbwarvblwtbrm:b12ddee553f5fe34bde02df1163bb052f373e74073575581103b6377087aa491@ec2-23-23-182-18.compute-1.amazonaws.com:5432/d17m2cooduda17
#DATABASE_URL: postgres://pstjclphswfuib:f5f0edbfba89149d85b2ac1182e670906d47e4723ffebd28e5a2b82aaa05afc6@ec2-174-129-18-42.compute-1.amazonaws.com:5432/dd5ltj3uh0n392

spring.datasource.url=${SPRING_DATA_URL:jdbc:postgresql://ec2-23-23-182-18.compute-1.amazonaws.com:5432/d17m2cooduda17?user=aqbwarvblwtbrm&password=b12ddee553f5fe34bde02df1163bb052f373e74073575581103b6377087aa491&sslmode=require}
#password to our database
spring.datasource.username=aqbwarvblwtbrm
spring.datasource.password=b12ddee553f5fe34bde02df1163bb052f373e74073575581103b6377087aa491
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.fail-on-empty-beans=false

server.error.whitelabel.enabled=false

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
